{"pages":[],"posts":[{"title":"Hexo 架站筆記(二) 部屬至Github","text":"佈署網頁到 Github首先進入到建立Hexo的資料夾中，編輯blog資料夾底下的 _config.yml 檔案，找到 deploy 並修改如下 1234deploy: type: git repository: http://github.com/用戶名/用戶名.github.io.git branch: master 回到命令提示字元，依序輸入3行指令(清除快取&gt;產生靜態網站&gt;部屬網站)，來將網站上傳到 github 中: 清除快取檔案 (db.json) 和已產生的靜態檔案 (public)。1hexo clean 產生靜態網站1hexo g 部署網站 1hexo d (更多詳細的Hexo指令可以參考這篇) 最後到瀏覽器中輸入 “用戶名”+github.io 的網址，就可以看到成功發布的網站了。","link":"/2019/05/14/hexo2/"},{"title":"Hexo 架站筆記(一) 前置作業","text":"什麼是HexoHexo是一個快速、簡單且強大的部落格框架。能夠使用 Markdown 語法來新增文章，快速渲染你的文章，有強大的外掛系統及豐富的擴充性，簡單易用，能在很短的時間內，透過漂亮的主題產生靜態檔案。 前置作業在開始之前須在電腦中安裝Node.js以及Git 安裝Hexo啟動command box使用ndoe.js的rpm工具安裝hexo 1npm install -g hexo-cli 備註:由於Git的網站部屬教學在網路上有很多教學資源可以運用，所以在這邊就不贅述了。 環境建置輸入以下指令初始化部落格以及配置，並建立一個新的網站。如果沒有設定 folder 的話，Hexo 會在目前的資料夾建立網站。 1hexo init blog 此時會在使用cd指令進入資料夾內 1cd blog 並新增一篇文章，這裡取名為 first_post，如果沒有設定 layout 的話，則會使用 _config.yml 中的 default_layout 設定代替。如果標題包含空格的話，請使用引號括起來。 1hexo new first_post 接下來我們使用 hexo g 來生成靜態檔案 1hexo g 使用 hexo s 啟動本地伺服器，來預覽本地端的 Hexo 部落格，預設開的 port 為 4000 1hexo s 如果 port 被占用，則可以使用下面語法修改 port 1hexo server -p 5000 最後在瀏覽器上面輸入: localhost:4000就可以看到新建的Hexo部落格了! 參考文獻https://junyou.tw/hexo/","link":"/2019/05/14/my-first-post/"}],"tags":[{"name":"Hexo","slug":"Hexo","link":"/tags/Hexo/"}],"categories":[]}